#include <stdlib.h>
#include <stdio.h>
#include <time.h>
#include <string.h>
#include <ctime>
#include <iostream>
#include <errno.h>
#include <signal.h>
#include <netdb.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <unistd.h>

#define PORT 31946


int rand_lim(int param_1)
{
  int iVar1;
  
  do {
    iVar1 = rand();
    iVar1 = iVar1 / (int)(0x7fffffff / (long)(param_1 + 1));
  } while (param_1 < iVar1);
  return iVar1;
}

char picker(char *param_1)
{
  int iVar1;
  size_t sVar2;
  
  sVar2 = strlen(param_1);
  iVar1 = rand_lim((int)sVar2 + -1);
  return param_1[iVar1];
}
   
int main(int argc, char const *argv[])
{
    int sock = 0, valread;
    struct sockaddr_in serv_addr;
    char *hello = "Dupond\n";
    char buffer[1024] = {0};
    if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0)
    {
        printf("\n Socket creation error \n");
        return -1;
    }
   
    serv_addr.sin_family = AF_INET;
    serv_addr.sin_port = htons(PORT);
       
    // Convert IPv4 and IPv6 addresses from text to binary form
    if(inet_pton(AF_INET, "141.94.211.6", &serv_addr.sin_addr)<=0) 
    {
        printf("\nInvalid address/ Address not supported \n");
        return -1;
    }
    
    char *listOfCaracters [4] = {"1234567890",
				    "abcdefghijklmnoqprstuvwyzx",
				    "ABCDEFGHIJKLMNOPQRSTUYWVZX",
				    "!@#$%^&*(){}[]:<>?,./"};
	char RandomPassword [20]={0};
	int i = 20;
	int randomLimite = 4;
	char caractere = 'a';
	printf("%s",RandomPassword);
	time_t time = ::time((time_t *)0);
	printf("%d\n",time);
	srandom((uint)time+3);
	for (i = 20; i != 0; i--) {
		int rand = rand_lim((int)randomLimite + -1);
		caractere = picker(listOfCaracters[rand]);
		strncat(RandomPassword,&caractere,1);
	}
	printf("%s\n",RandomPassword);
    
    if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0)
    {
        printf("\nConnection Failed \n");
        return -1;
    }
    
	
    valread = read( sock , buffer, 1024);    
    printf("%s\n",buffer );
    send(sock , hello , strlen(hello) , 0 );
    printf("Dupont\n");
    valread = read( sock , buffer, 1024);    
    printf("%s\n",buffer );
    send(sock , RandomPassword , 20 , 0 );
    printf("%s",RandomPassword);
    valread = read( sock , buffer, 1024);    
    printf("%s\n",buffer );
    valread = read( sock , buffer, 1024);    
    printf("%s\n",buffer );


    return 0;
}
/*        char *listOfCaracters [4] = {"1234567890",
				    "abcdefghijklmnoqprstuvwyzx",
				    "ABCDEFGHIJKLMNOPQRSTUYWVZX",
				    "!@#$%^&*(){}[]:<>?,./"};
	char RandomPassword [32];
	int i = 20;
	int randomLimite = 4;
	char caractere = 'a';

	time_t time = ::time((time_t *)0);
	srandom((uint)time);
	for (i = 20; i > 0; i--) {
		int rand = rand_lim((int)randomLimite + -1);
		caractere = picker(listOfCaracters[rand]);
		strncat(RandomPassword,&caractere,1);
	}
	printf("%s",RandomPassword);*/
